name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ] # or your main branch name
  workflow_dispatch: # Allows manual triggering

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x' # Or your preferred Node.js version
          cache: 'npm' # Cache npm dependencies

      - name: Install dependencies
        run: npm install

      - name: Build the SvelteKit app
        # Set the BASE_PATH environment variable for correct asset paths
        # Replace '/bankingsheets' if your repository name is different
        env:
          BASE_PATH: '/bankingsheets'
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4 # Configures Pages environment

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3 # Use v3 or later
        with:
          # Upload the correct directory specified in svelte.config.js
          path: './build'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # Ensure build job completes successfully first
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # Use v4 or later
